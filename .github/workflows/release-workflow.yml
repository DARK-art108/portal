name: Portal CI/CD

on:
  push:
    branches: [hotfix/release-workflow-0.4.0]
jobs:
  build-run-win:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install Engine dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pylint
          pip install -r ./src/engine/requirements.txt
          python -m pip install --upgrade pyinstaller

      - name: Package Application with pyinstaller Window
        working-directory: ./src/engine
        run: |
          pyinstaller -F run.py --hidden-import datature-hub --hidden-import engineio.async_drivers.threading  --distpath ./dist/windows

      - uses: actions/upload-artifact@v2
        with:
          name: windows-run
          path: ./src/engine/dist/windows
          retention-days: 1

  build-run-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install Engine dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pylint
          pip install -r ./src/engine/requirements.txt
          python -m pip install --upgrade pyinstaller

      - name: Package Application with pyinstaller Window
        working-directory: ./src/engine
        run: |
          pyinstaller -F run.py --hidden-import datature-hub --hidden-import engineio.async_drivers.threading  --distpath ./dist/linux

      - uses: actions/upload-artifact@v2
        with:
          name: linux-run
          path: ./src/engine/dist/linux
          retention-days: 1

  build-out:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1.4.4
        with:
          node-version: 14
          registry-url: https://npm.pkg.github.com/
          scope: "@datature"

      - name: Installing App dependencies
        working-directory: ./src/app
        run: npm install

      - name: Build and export out
        working-directory: ./src/app
        run: npm run build:static

      - uses: actions/upload-artifact@v2
        with:
          name: app-out
          path: ./portal-build/out
          retention-days: 1

  build-win:
    needs: [build-run-win, build-out]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1

      - name: Extract Version
        shell: bash
        run: echo "##[set-output name=version;]$(echo ${GITHUB_REF#refs/heads/hotfix/release-workflow-})"
        id: extract_version

      - uses: actions/download-artifact@v2
        with:
          name: windows-run
          path: ./portal-build/dist

      - uses: actions/download-artifact@v2
        with:
          name: app-out
          path: ./portal-build/out

        # Install Node.js
      - uses: actions/setup-node@v1.4.4
        with:
          node-version: 14
          registry-url: https://npm.pkg.github.com/
          scope: "@datature"

      # Install your dependencies
      - name: Installing Portal dependencies
        working-directory: .
        run: npm install

      - name: Publish windows
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: .
        run: |
          npm run dist

      - uses: actions/upload-artifact@v2
        with:
          name: win-exe
          path: ./application/Portal Setup ${{ steps.extract_version.outputs.version }}.exe
          retention-days: 1

  build-linux:
    needs: [build-run-linux, build-out]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Set the env variables
        run: |
          echo "USE_HARD_LINKS=false" >> $GITHUB_ENV

      - name: Extract Version
        shell: bash
        run: echo "##[set-output name=version;]$(echo ${GITHUB_REF#refs/heads/hotfix/release-workflow-})"
        id: extract_version

      - uses: actions/download-artifact@v2
        with:
          name: linux-run
          path: ./portal-build/dist

      - uses: actions/download-artifact@v2
        with:
          name: app-out
          path: ./portal-build/out

      - name: Check existence
        run: |
          ls -R .

        # Install Node.js
      - uses: actions/setup-node@v1.4.4
        with:
          node-version: 14
          registry-url: https://npm.pkg.github.com/
          scope: "@datature"

      # Install your dependencies
      - name: Installing Portal dependencies
        working-directory: .
        run: npm install

      - name: Publish App
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: .
        run: |
          npm run dist

      - name: Check existence
        run: |
          ls -R .

      - uses: actions/upload-artifact@v2
        with:
          name: linux-appimage
          path: ./application/Portal-${{ steps.extract_version.outputs.version }}.AppImage
          retention-days: 1

  build-mac:
    needs: [build-run-linux, build-out]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1

      - name: Set the env variables
        run: |
          echo "USE_HARD_LINKS=false" >> $GITHUB_ENV

      - name: Extract Version
        shell: bash
        run: echo "##[set-output name=version;]$(echo ${GITHUB_REF#refs/heads/hotfix/release-workflow-})"
        id: extract_version

      - uses: actions/download-artifact@v2
        with:
          name: linux-run
          path: ./portal-build/dist

      - uses: actions/download-artifact@v2
        with:
          name: app-out
          path: ./portal-build/out

        # Install Node.js
      - uses: actions/setup-node@v1.4.4
        with:
          node-version: 14
          registry-url: https://npm.pkg.github.com/
          scope: "@datature"

      # Install your dependencies
      - name: Installing Portal dependencies
        working-directory: .
        run: npm install

      - name: Publish App
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: .
        run: |
          npm run dist

      - uses: actions/upload-artifact@v2
        with:
          name: mac-dmg
          path: ./application/Portal-${{ steps.extract_version.outputs.version }}.dmg
          retention-days: 1

  release:
    needs: [build-win, build-linux, build-mac]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Extract Version
        shell: bash
        run: echo "##[set-output name=version;]$(echo ${GITHUB_REF#refs/heads/hotfix/release-workflow-})"
        id: extract_version

      - name: release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true
          prerelease: false
          tag_name: v${{ steps.extract_version.outputs.version }}
          release_name: ${{ steps.extract_branch.outputs.branch }}

      - uses: actions/download-artifact@v2
        with:
          name: win-exe
          path: ./application/windows

      - uses: actions/download-artifact@v2
        with:
          name: linux-appimage
          path: ./application/linux

      - uses: actions/download-artifact@v2
        with:
          name: mac-dmg
          path: ./application/mac

      - name: Upload windows to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./application/windows/Portal Setup ${{ steps.extract_version.outputs.version }}.exe
          asset_name: Portal-Setup-${{ steps.extract_version.outputs.version }}-win.exe
          asset_content_type: application/exe

      - name: Upload linux to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./application/linux/Portal-${{ steps.extract_version.outputs.version }}.AppImage
          asset_name: Portal-${{ steps.extract_version.outputs.version }}-linux.AppImage
          asset_content_type: application/AppImage

      - name: Upload mac to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./application/mac/Portal-${{ steps.extract_version.outputs.version }}.dmg
          asset_name: Portal-${{ steps.extract_version.outputs.version }}-mac.dmg
          asset_content_type: application/dmg
